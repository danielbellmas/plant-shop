{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\Documents\\\\Projects\\\\MyProjects\\\\plant-shop\\\\frontend\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport plant from \"../images/plant.png\";\nimport Swal from \"sweetalert2\";\nimport \"../styles/Contacts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset\n  } = useForm();\n  const watchAllFields = watch();\n\n  const handleSendForm = data => {\n    //The data that's needed to be stored\n    //const { name, email, subject, message } = data;\n    if (!validateEmail()) {\n      //Maybe there is a way to check error with useForm\n      Swal.fire({\n        title: \"Message Sent.\",\n        icon: \"success\",\n        html: \"We'll be in touch!\",\n        width: 600,\n        padding: \"3em\",\n        backdrop: `\n      rgba(33, 107, 101, 0.3)\n      url(\"${plant}\")\n      top center\n      no-repeat\n      `\n      }); //Reset Fields\n\n      reset(data);\n    } else {\n      Swal.fire({\n        title: \"Validation error.\",\n        icon: \"error\",\n        html: \"Please confirm the fields and submit it again.\",\n        width: 300,\n        toast: true,\n        position: \"center\"\n      });\n    }\n  };\n\n  const validateEmail = () => {\n    var _watchAllFields$email;\n\n    return !(watchAllFields === null || watchAllFields === void 0 ? void 0 : (_watchAllFields$email = watchAllFields.email) === null || _watchAllFields$email === void 0 ? void 0 : _watchAllFields$email.match(\"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$\" //Not a perfect email validator\n    ));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"contacts-header\",\n      children: \"CONTACT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contacts-form\",\n      onSubmit: handleSubmit(handleSendForm),\n      children: [/*#__PURE__*/_jsxDEV(TextField, { ...register(\"name\"),\n        className: \"text-field\",\n        required: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        id: \"name\",\n        name: \"name\",\n        label: \"Full Name\",\n        autoComplete: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"email\"),\n        id: \"email\",\n        name: \"email\",\n        className: \"text-field\",\n        required: true,\n        variant: \"outlined\",\n        label: \"Email\",\n        margin: \"normal\",\n        autoComplete: \"email\",\n        error: validateEmail(),\n        helperText: validateEmail() ? \"Incorrect Email.\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"subject\"),\n        id: \"subject\",\n        name: \"subject\",\n        className: \"text-field\",\n        required: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        label: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"message\"),\n        id: \"message\",\n        name: \"message\",\n        className: \"text-field\",\n        required: true,\n        margin: \"normal\",\n        multiline: true,\n        variant: \"outlined\",\n        label: \"Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          background: \"#216b65\",\n          color: \"whitesmoke\"\n        },\n        variant: \"contained\",\n        type: \"submit\",\n        size: \"large\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"plant-icon\",\n      src: plant,\n      alt: \"plant-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"BVTQ8T9lDkiyAPKrB4v15Z5a5I4=\", false, function () {\n  return [useForm];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/97254/OneDrive/Documents/Projects/MyProjects/plant-shop/frontend/src/components/Contacts.js"],"names":["React","useForm","Button","TextField","plant","Swal","Contacts","register","handleSubmit","watch","reset","watchAllFields","handleSendForm","data","validateEmail","fire","title","icon","html","width","padding","backdrop","toast","position","email","match","background","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport plant from \"../images/plant.png\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../styles/Contacts.css\";\r\nconst Contacts = () => {\r\n  const { register, handleSubmit, watch, reset } = useForm();\r\n  const watchAllFields = watch();\r\n\r\n  const handleSendForm = (data) => {\r\n    //The data that's needed to be stored\r\n    //const { name, email, subject, message } = data;\r\n\r\n    if (!validateEmail()) {\r\n      //Maybe there is a way to check error with useForm\r\n      Swal.fire({\r\n        title: \"Message Sent.\",\r\n        icon: \"success\",\r\n        html: \"We'll be in touch!\",\r\n        width: 600,\r\n        padding: \"3em\",\r\n        backdrop: `\r\n      rgba(33, 107, 101, 0.3)\r\n      url(\"${plant}\")\r\n      top center\r\n      no-repeat\r\n      `,\r\n      });\r\n\r\n      //Reset Fields\r\n      reset(data);\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Validation error.\",\r\n        icon: \"error\",\r\n        html: \"Please confirm the fields and submit it again.\",\r\n        width: 300,\r\n        toast: true,\r\n        position: \"center\",\r\n      });\r\n    }\r\n  };\r\n  const validateEmail = () => {\r\n    return !watchAllFields?.email?.match(\r\n      \"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$\" //Not a perfect email validator\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"contacts-header\">CONTACT</h1>\r\n\r\n      <form className=\"contacts-form\" onSubmit={handleSubmit(handleSendForm)}>\r\n        <TextField\r\n          {...register(\"name\")}\r\n          className=\"text-field\"\r\n          required\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Full Name\"\r\n          autoComplete=\"name\"\r\n        />\r\n        <TextField\r\n          {...register(\"email\")}\r\n          id=\"email\"\r\n          name=\"email\"\r\n          className=\"text-field\"\r\n          required\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          margin=\"normal\"\r\n          autoComplete=\"email\"\r\n          error={validateEmail()}\r\n          helperText={validateEmail() ? \"Incorrect Email.\" : \"\"}\r\n        />\r\n        <TextField\r\n          {...register(\"subject\")}\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          className=\"text-field\"\r\n          required\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Subject\"\r\n        />\r\n        <TextField\r\n          {...register(\"message\")}\r\n          id=\"message\"\r\n          name=\"message\"\r\n          className=\"text-field\"\r\n          required\r\n          margin=\"normal\"\r\n          multiline\r\n          variant=\"outlined\"\r\n          label=\"Your Message\"\r\n        />\r\n        <Button\r\n          style={{ background: \"#216b65\", color: \"whitesmoke\" }}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          size=\"large\"\r\n        >\r\n          Send\r\n        </Button>\r\n      </form>\r\n      <img id=\"plant-icon\" src={plant} alt=\"plant-icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}