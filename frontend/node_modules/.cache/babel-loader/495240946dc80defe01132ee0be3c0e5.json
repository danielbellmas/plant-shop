{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\Documents\\\\Projects\\\\MyProjects\\\\plant-shop\\\\frontend\\\\src\\\\components\\\\PlantList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Grid, InputBase, IconButton, Paper, Typography } from \"@material-ui/core\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Plant from \"./Plant\";\nimport { ProductContext } from \"../PlantContext\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlantList = () => {\n  _s();\n\n  const [plants] = useContext(ProductContext);\n  const [filteredPlants, setFilteredPlants] = useState(plants);\n  const maxPlantPrice = parseInt(localStorage.getItem(\"max\"));\n  const minPlantPrice = parseInt(localStorage.getItem(\"min\"));\n  const [sliderValue, setSliderValue] = useState(maxPlantPrice);\n  const classes = useStyles();\n  const searchRef = useRef(null);\n  const [page, setPage] = useState(1);\n  const plantsPerPage = 12;\n  const pagesVisited = (page - 1) * plantsPerPage;\n  const displayPlants = filteredPlants.slice(pagesVisited, pagesVisited + plantsPerPage);\n  const pageCount = Math.ceil(filteredPlants.length / plantsPerPage);\n\n  const handleSliderChange = (e, value) => {\n    setSliderValue(value);\n    setFilteredPlants(plants.filter(plant => parseFloat(plant.price.replace(\"$\", \"\")) <= sliderValue));\n  };\n\n  const handleSubmit = () => {\n    setFilteredPlants(plants.filter(plant => plant.name.toLowerCase().includes(searchRef.current.value.toLowerCase())));\n    setSliderValue(maxPlantPrice);\n  };\n\n  const handlePageChange = (event, value) => setPage(value);\n\n  const SearchBar = () => /*#__PURE__*/_jsxDEV(Paper, {\n    component: \"form\",\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputBase, {\n      inputRef: searchRef,\n      className: classes.input,\n      placeholder: \"Search...\",\n      inputProps: {\n        \"aria-label\": \"search plants\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"2.5rem\",\n      marginBottom: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Current maximum price: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"$\", sliderValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrettoSlider, {\n          valueLabelDisplay: \"auto\",\n          \"aria-label\": \"pretto slider\",\n          value: sliderValue,\n          min: minPlantPrice + 1,\n          max: maxPlantPrice,\n          onChange: handleSliderChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), filteredPlants.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 3,\n        children: displayPlants.map(plant => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Plant, {\n            plant: plant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, plant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: page,\n        count: pageCount,\n        color: \"primary\",\n        size: \"large\",\n        onChange: handlePageChange,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No plants found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please try another plant \\uD83C\\uDF3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlantList, \"r1iRxqDr4fOa4ziZlvmLUKjfKUk=\", false, function () {\n  return [useStyles];\n});\n\n_c = PlantList;\nexport default PlantList;\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"#52af77\",\n    height: 8,\n    width: 300\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"2px 4px\",\n    margin: \"0 0 1rem\",\n    display: \"inline-flex\"\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantList\");","map":{"version":3,"sources":["C:/Users/97254/OneDrive/Documents/Projects/MyProjects/plant-shop/frontend/src/components/PlantList.js"],"names":["React","useState","useEffect","useRef","useContext","Grid","InputBase","IconButton","Paper","Typography","withStyles","makeStyles","SearchIcon","Pagination","Plant","ProductContext","Slider","PlantList","plants","filteredPlants","setFilteredPlants","maxPlantPrice","parseInt","localStorage","getItem","minPlantPrice","sliderValue","setSliderValue","classes","useStyles","searchRef","page","setPage","plantsPerPage","pagesVisited","displayPlants","slice","pageCount","Math","ceil","length","handleSliderChange","e","value","filter","plant","parseFloat","price","replace","handleSubmit","name","toLowerCase","includes","current","handlePageChange","event","SearchBar","root","input","iconButton","textAlign","marginTop","marginBottom","display","justifyContent","flexWrap","map","id","PrettoSlider","color","height","width","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","theme","padding","margin","spacing","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Plant from \"./Plant\";\r\nimport { ProductContext } from \"../PlantContext\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst PlantList = () => {\r\n  const [plants] = useContext(ProductContext);\r\n  const [filteredPlants, setFilteredPlants] = useState(plants);\r\n  const maxPlantPrice = parseInt(localStorage.getItem(\"max\"));\r\n  const minPlantPrice = parseInt(localStorage.getItem(\"min\"));\r\n  const [sliderValue, setSliderValue] = useState(maxPlantPrice);\r\n  const classes = useStyles();\r\n\r\n  const searchRef = useRef(null);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const plantsPerPage = 12;\r\n  const pagesVisited = (page - 1) * plantsPerPage;\r\n  const displayPlants = filteredPlants.slice(\r\n    pagesVisited,\r\n    pagesVisited + plantsPerPage\r\n  );\r\n  const pageCount = Math.ceil(filteredPlants.length / plantsPerPage);\r\n\r\n  const handleSliderChange = (e, value) => {\r\n    setSliderValue(value);\r\n\r\n    setFilteredPlants(\r\n      plants.filter(\r\n        (plant) => parseFloat(plant.price.replace(\"$\", \"\")) <= sliderValue\r\n      )\r\n    );\r\n  };\r\n  const handleSubmit = () => {\r\n    setFilteredPlants(\r\n      plants.filter((plant) =>\r\n        plant.name.toLowerCase().includes(searchRef.current.value.toLowerCase())\r\n      )\r\n    );\r\n    setSliderValue(maxPlantPrice);\r\n  };\r\n  const handlePageChange = (event, value) => setPage(value);\r\n\r\n  const SearchBar = () => (\r\n    <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n      <InputBase\r\n        inputRef={searchRef}\r\n        className={classes.input}\r\n        placeholder=\"Search...\"\r\n        inputProps={{ \"aria-label\": \"search plants\" }}\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n  return (\r\n    <main\r\n      style={{\r\n        textAlign: \"center\",\r\n        marginTop: \"2.5rem\",\r\n        marginBottom: \"2rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <SearchBar />\r\n        <div>\r\n          <Typography>\r\n            Current maximum price: <b>${sliderValue}</b>\r\n          </Typography>\r\n          <PrettoSlider\r\n            valueLabelDisplay=\"auto\"\r\n            aria-label=\"pretto slider\"\r\n            value={sliderValue}\r\n            min={minPlantPrice + 1}\r\n            max={maxPlantPrice}\r\n            onChange={handleSliderChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {filteredPlants.length !== 0 ? (\r\n        <>\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            {displayPlants.map((plant) => (\r\n              <Grid item key={plant.id} xs={12} sm={6} md={4} lg={3}>\r\n                <Plant plant={plant} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <br />\r\n          <Pagination\r\n            page={page}\r\n            count={pageCount}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onChange={handlePageChange}\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>No plants found.</h1>\r\n          <h4>Please try another plant 🌿</h4>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PlantList;\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 8,\r\n    width: 300,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    margin: \"0 0 1rem\",\r\n    display: \"inline-flex\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}